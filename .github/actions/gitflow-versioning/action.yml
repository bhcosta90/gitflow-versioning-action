name: "Git Flow Versioning"
description: "Gerencia tags e branches conforme o fluxo Git Flow com incrementos automáticos."
author: "Seu Nome"

inputs:
  mode:
    description: "Modo de execução (dev, dev-branch, release-branch, finalize-package, finalize-release)"
    required: true
  branch:
    description: "Nome da branch base (opcional para alguns modos)"
    required: false

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Executar script
      shell: bash
      run: |
        echo "Modo: ${{ inputs.mode }}"
        case "${{ inputs.mode }}" in
          dev)
            latest=$(git tag --list "dev-*" --sort=-v:refname | head -n 1)
            if [[ -z "$latest" ]]; then
              version="dev-0.0.0"
            else
              base=${latest#dev-}
              IFS='.' read -r major minor patch <<< "$base"
              patch=$((patch+1))
              version="dev-$major.$minor.$patch"
            fi
            git tag $version
            git push origin $version
            ;;
          dev-branch)
            base="${{ inputs.branch }}"
            latest=$(git tag --list "${base}.*" --sort=-v:refname | head -n 1)
            if [[ -z "$latest" ]]; then
              version="${base}.0"
            else
              patch=${latest##*.}
              patch=$((patch+1))
              version="${base}.${patch}"
            fi
            git tag $version
            git push origin $version
            ;;
          release-branch)
            base="${{ inputs.branch }}"
            latest=$(git tag --list "${base}.*" --sort=-v:refname | head -n 1)
            if [[ -z "$latest" ]]; then
              version="${base}.0"
            else
              patch=${latest##*.}
              patch=$((patch+1))
              version="${base}.${patch}"
            fi
            git tag $version
            git push origin $version
            ;;
          finalize-package)
            latest=$(git tag --list "dev-*" --sort=-v:refname | head -n 1)
            if [[ -z "$latest" ]]; then
              echo "Nenhuma dev tag encontrada."
              exit 1
            fi
            base=${latest#dev-}
            git tag $base
            git push origin $base
            major_minor=$(echo $base | cut -d'.' -f1,2)
            git checkout -b develop/$major_minor
            git push origin develop/$major_minor
            for tag in $(git tag --list "dev-*"); do
              git push --delete origin "$tag"
              git tag -d "$tag"
            done
            ;;
          finalize-release)
            latest=$(git tag --list "[0-9]*.[0-9]*.[0-9]*" --sort=-v:refname | head -n 1)
            if [[ -z "$latest" ]]; then
              echo "Nenhuma tag final encontrada."
              exit 1
            fi
            major_minor=$(echo $latest | cut -d'.' -f1,2)
            git checkout -b release/$major_minor
            git push origin release/$major_minor
            for tag in $(git tag --list "dev-*"); do
              git push --delete origin "$tag"
              git tag -d "$tag"
            done
            for branch in $(git branch -r | grep "origin/develop/" | sed 's/origin\///'); do
              git push origin --delete "$branch"
            done
            ;;
        esac
